plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
apply from: "../biz-library.gradle"


android {
    namespace rootProject.ext.appNamespace
    compileSdk rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdk rootProject.ext.android.minSdkVersion
        targetSdk rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }



    //1风味管理 多渠道
    getFlavorDimensionList().add('example_obd')

    //2配置签名
    signingConfigs {
        obd {
            keyAlias 'zdyb'
            keyPassword 'zdyb_obd'
            storeFile file('./jks/zdyb_obd.jks')
            storePassword 'zdyb_obd'
        }

        zdyb {
            keyAlias 'ldjc'
            keyPassword 'zdyb_ldjc'
            storeFile file('./jks/zdyb_ldjc.jks')
            storePassword 'zdyb_ldjc'
        }

        exampleFlavor {
            keyAlias 'zdyb'
            keyPassword 'zdyb_obd'
            storeFile file('./jks/zdyb_obd.jks')
            storePassword 'zdyb_obd'
        }
    }

    //3
    productFlavors {
        // 原始渠道
        obd{
            // 这里的值与前面flavorDimensions设置的值保持一致
            //dimension 'example_obd'
            signingConfig signingConfigs.obd
            //包名 版本信息
            applicationId "com.zdyb.obd"
            versionCode 15
            versionName "v1.0.15"

            //示例取不同的值 channel_value
            manifestPlaceholders = [channel_value: "zdybChannel"]
        }

        zdyb {
            // 这里的值与前面flavorDimensions设置的值保持一致
            //dimension 'example_obd'
            signingConfig signingConfigs.zdyb
            //包名 版本信息
            applicationId "com.zdyb.app"
            versionCode 1
            versionName "1.0.1-flavor"
            buildConfigField "String", "HTTPREALSE", "\"https://zdyban.zdeps.com\""
            buildConfigField "String", "HTTPDEBUG", "\"https://zdyban.zdeps.com\""
            buildConfigField "String", "ENTRANCE", "\"zdeps\""
            //示例取不同的值 channel_value
            manifestPlaceholders = [channel_value: "exampleFlavor channel"]
        }
        // 示例渠道
        exampleFlavor {
            // 这里的值与前面flavorDimensions设置的值保持一致
            //dimension 'example_obd'
            signingConfig signingConfigs.exampleFlavor
            //包名 版本信息
            applicationId "com.zdyb.obdDemo"
            versionCode 1
            versionName "1.0.1-flavor"

            //示例取不同的值 channel_value
            manifestPlaceholders = [channel_value: "exampleFlavor channel"]
        }
    }

    //4需要移除默认签名
    buildTypes {
        debug {
            // 需要移除默认签名
            signingConfig null
        }

        release {
            // 需要移除默认签名
            signingConfig null
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}_${variant.versionName}_${releaseTime()}.apk"
        }
    }

    ndkVersion '21.4.7075529'
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("Asia/Shanghai"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(':lib_common')
    //1018 诊断
    implementation project(':module_diagnosis')
    //环检
    //implementation project(':module_obd')
}